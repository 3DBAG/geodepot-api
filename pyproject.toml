[build-system]
requires = ["scikit-build-core==0.10.5", "nanobind==2.2.0"]
build-backend = "scikit_build_core.build"

[project]
name = "geodepot_api"
version = "1.0.4"
description = "geodepot API"
readme = "geodepot-py/README.md"
authors = [
    {name = "BalÃ¡zs Dukai", email = "balazs.dukai@3dgi.nl"}
]
requires-python = ">=3.12"
classifiers = ["Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
dev = ["pytest", "cibuildwheel", "ruff"]


[tool.scikit-build]
wheel.expand-macos-universal-tags = true
wheel.packages = ["geodepot-py/src/geodepot_api"]
build.verbose = true
logging.level = "INFO"
# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"
# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

[tool.scikit-build.cmake.define]
GD_BUILD_TESTING = "OFF"
GD_BUILD_APPS = "OFF"
GD_BUILD_BINDINGS = "ON"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["--import-mode=importlib", "-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
log_cli_level = "INFO"
filterwarnings = ["error",
    "ignore::pytest.PytestCacheWarning",
]
testpaths = ["geodepot-py/tests"]


[tool.cibuildwheel]
build-frontend = "build[uv]"
test-command = "pytest geodepot-py/tests"
test-extras = ["dev"]

[tool.cibuildwheel.pyodide]
environment.CFLAGS = "-fexceptions"
environment.LDFLAGS = "-fexceptions"
build-frontend = { name = "build", args = ["--exports", "whole_archive"] }

[tool.ruff]
src = ["geodepot-py/src"]
